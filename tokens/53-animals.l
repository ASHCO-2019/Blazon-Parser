%%

lions? { mkNode( E_CHARGE, "lion/lion"); return CHARGE; }
lioncell?e?s? { mkNode( E_CHARGE, "lion/lion"); return CHARGE; }

tortoises? { mkNode( E_CHARGE, "animal/tortoise"); return CHARGE; }
reindeers? { mkNode( E_CHARGE, "animal/reindeer"); return CHARGE; }
crocodiles? { mkNode( E_CHARGE, "animal/crocodile"); return CHARGE; }
antelopes? { mkNode( E_CHARGE, "animal/antelope"); return CHARGE; }
armadilloe?s? { mkNode( E_CHARGE, "animal/armadillo"); return CHARGE; }
anteaters? { mkNode( E_CHARGE, "animal/anteater"); return CHARGE; }
ant{S}eaters? { mkNode( E_CHARGE, "animal/anteater"); return CHARGE; }
mammoths? { mkNode( E_CHARGE, "animal/mammoth"); return CHARGE; }
ibex(es)? { mkNode( E_CHARGE, "animal/antelope"); return CHARGE; }
lynxe?s? { mkNode( E_CHARGE, "animal/lynx"); return CHARGE; }
elephants? { mkNode( E_CHARGE, "animal/elephant"); return CHARGE; }
leopards? { mkNode( E_CHARGE, "animal/leopard"); return CHARGE; }
leopards?{S}heads? { mkNode( E_CHARGE, "animal/leopard-head"); return CHARGE; }
leopards?{S}heads?{S}jessant{S}?de{S}?l[iy]s { mkNode( E_CHARGE, "animal/leopard-jessant"); return CHARGE; }
spotted{S}leopards? { mkNode( E_CHARGE, "animal/leopard-natural"); return CHARGE; }
lions?{S}leoparde?s? { mkNode( E_CHARGE, "lion/lion-passant-guardant"); return CHARGE; }
bengal{S}t(i|y)gers? { mkNode( E_CHARGE, "animal/tiger-natural"); return CHARGE; }
(scaly{S})?lizards? { mkNode( E_CHARGE, "animal/lizard"); return CHARGE; }
springboks? { mkNode( E_CHARGE, "animal/springbok"); return CHARGE; }
scorpions? { mkNode( E_CHARGE, "animal/scorpion"); return CHARGE; }
camels? { mkNode( E_CHARGE, "animal/camel"); return CHARGE; }
bisons? { mkNode( E_CHARGE, "animal/bison"); return CHARGE; }
frogs? { mkNode( E_CHARGE, "animal/frog"); return CHARGE; }
toads? { mkNode( E_CHARGE, "animal/toad"); return CHARGE; }
apes? { mkNode( E_CHARGE, "animal/monkey"); return CHARGE; }
monk(ey|ie)s? { mkNode( E_CHARGE, "animal/monkey"); return CHARGE; }
kangaroos? { mkNode( E_CHARGE, "animal/kangaroo"); return CHARGE; }
gorillas? { mkNode( E_CHARGE, "animal/gorilla"); return CHARGE; }
rhinocerose?s? { mkNode( E_CHARGE, "animal/rhinoceros"); return CHARGE; }
rhinos? { mkNode( E_CHARGE, "animal/rhinoceros"); return CHARGE; }
zebras? { mkNode( E_CHARGE, "animal/zebra"); return CHARGE; }
porcupines? { mkNode( E_CHARGE, "animal/porcupine"); return CHARGE; }
camele?opards? { mkNode( E_CHARGE, "animal/camelopard"); return CHARGE; }
